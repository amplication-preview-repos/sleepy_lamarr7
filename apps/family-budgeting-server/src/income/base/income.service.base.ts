/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Income as PrismaIncome } from "@prisma/client";

export class IncomeServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.IncomeCountArgs, "select">): Promise<number> {
    return this.prisma.income.count(args);
  }

  async incomes(args: Prisma.IncomeFindManyArgs): Promise<PrismaIncome[]> {
    return this.prisma.income.findMany(args);
  }
  async income(
    args: Prisma.IncomeFindUniqueArgs
  ): Promise<PrismaIncome | null> {
    return this.prisma.income.findUnique(args);
  }
  async createIncome(args: Prisma.IncomeCreateArgs): Promise<PrismaIncome> {
    return this.prisma.income.create(args);
  }
  async updateIncome(args: Prisma.IncomeUpdateArgs): Promise<PrismaIncome> {
    return this.prisma.income.update(args);
  }
  async deleteIncome(args: Prisma.IncomeDeleteArgs): Promise<PrismaIncome> {
    return this.prisma.income.delete(args);
  }
}
